name: Manual Release

# Default minimal permissions; jobs elevate only where required.
permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      prerelease:
        description: 'Mark as pre-release'
        type: boolean
        required: false
        default: false

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'src/PartnerAdminLinkTool.UI/PartnerAdminLinkTool.UI.csproj'

jobs:
  manual-release:
    name: Manual Release Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - win-x64
          - win-x86
        include:
          - target: win-x64
            artifact_name: PartnerAdminLinkTool-win-x64
            asset_name: PartnerAdminLinkTool-win-x64.zip
          - target: win-x86
            artifact_name: PartnerAdminLinkTool-win-x86
            asset_name: PartnerAdminLinkTool-win-x86.zip
    permissions:
      contents: read   # checkout code
      actions: write   # upload artifacts
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore PartnerAdminLinkTool.sln
      
    - name: Run tests
      run: dotnet test PartnerAdminLinkTool.sln --configuration Release --logger trx
      
    - name: Publish application
      shell: bash
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --runtime ${{ matrix.target }} \
          --self-contained true \
          --output ./publish/${{ matrix.artifact_name }} \
          /p:Version=${{ github.event.inputs.version }} \
          /p:AssemblyVersion=${{ github.event.inputs.version }} \
          /p:FileVersion=${{ github.event.inputs.version }} \
          /p:PublishSingleFile=true \
          /p:PublishReadyToRun=false \
          /p:PublishTrimmed=false \
          /p:IncludeNativeLibrariesForSelfExtract=true \
          /p:UseAppHost=true
          
    - name: Create release package
      shell: bash
      run: |
        cd ./publish
        
        # Copy additional files
        cp ../README.md ${{ matrix.artifact_name }}/
        cp ../docs/APP_REGISTRATION_SETUP.md ${{ matrix.artifact_name }}/
        
        # Create Windows zip file
        7z a -tzip ../${{ matrix.asset_name }} ./${{ matrix.artifact_name }}/*
        
        cd ..
        ls -la ${{ matrix.asset_name }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.asset_name }}
        retention-days: 30

  create-manual-release:
    name: Create Manual Release
    needs: manual-release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # create release
      actions: read    # download artifacts
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Download all artifacts
      uses: actions/download-artifact@v5
      with:
        path: ./artifacts
        
    - name: Move artifacts to release directory
      shell: bash
      run: |
        mkdir -p ./release
        find ./artifacts -name "*.zip" | xargs -I {} cp {} ./release/
        ls -la ./release/
        
    - name: Generate release notes
      id: release_notes
      shell: bash
      run: |
        cat << 'EOF' > release_notes.md
        ## ðŸš€ Partner Admin Link (PAL) Tool ${{ github.event.inputs.version }}
        
        > **Manual Release** - Created manually via GitHub Actions
        
        ### ðŸ“¦ Downloads (Windows Only)
        
        **Windows:**
        - `PartnerAdminLinkTool-win-x64.zip` - Windows 64-bit (x64)
        - `PartnerAdminLinkTool-win-x86.zip` - Windows 32-bit (x86)
        
        ### ðŸŽ¯ What's Included
        
        Each download contains:
        - The Partner Admin Link Tool executable (.exe)
        - README.md with usage instructions

        ### ðŸ”§ Installation
        
        1. Download the appropriate Windows package for your platform
        2. Extract the zip archive
        3. Follow the setup instructions in APP_REGISTRATION_SETUP.md
        4. Run the PartnerAdminLinkTool.UI.exe to start linking your Partner ID
        
        ### âš¡ Requirements
        
        - Windows operating system
        - No .NET runtime installation required (self-contained)
        - Internet connectivity
        - Azure subscription and appropriate permissions
        - Microsoft AI Cloud Partner Program Partner ID
        EOF
        
        echo "release_notes_file=release_notes.md" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Partner Admin Link Tool ${{ github.event.inputs.version }}
        body_path: ${{ steps.release_notes.outputs.release_notes_file }}
        files: ./release/*
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        make_latest: ${{ !github.event.inputs.prerelease }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
